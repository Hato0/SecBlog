<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>Development - Tag - Hato0 - Blog</title><link>https://www.hato0.xyz/tags/development/</link><description>Development - Tag - Hato0 - Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Sat, 11 May 2024 00:00:00 +0000</lastBuildDate><atom:link href="https://www.hato0.xyz/tags/development/" rel="self" type="application/rss+xml"/><item><title>OwlGuard: A multi-instance SIEM rule manager.</title><link>https://www.hato0.xyz/posts/blue_team/owlguard/</link><pubDate>Sat, 11 May 2024 00:00:00 +0000</pubDate><author>Hato0</author><guid>https://www.hato0.xyz/posts/blue_team/owlguard/</guid><description>Summary OwlGuard is a platform designed to provide security teams a better way to manage SIEM rules. This tool aims to onboard clients efficiently just by using already developed rules and a simple connection to their SIEM. For now, only SPLUNK is supported, if the project get interest, other SIEM will be included in the support list.
Language used When I&amp;rsquo;m doing a project, I&amp;rsquo;m not only doing it to develop something that will be helpful for me or other but also to learn new things.</description></item><item><title>CTF: Huntress CTF</title><link>https://www.hato0.xyz/posts/ctf/huntress/</link><pubDate>Sat, 21 Oct 2023 00:00:00 +0000</pubDate><author>Hato0</author><guid>https://www.hato0.xyz/posts/ctf/huntress/</guid><description>Huntress Writeup Each challenges successfully solved will be explained here. The solution will not only be put in writing but also the way of thinking and failed tries will be described.
Unfortunately, took too long to write it (didn&amp;rsquo;t took note &amp;hellip;) so wasn&amp;rsquo;t able to re-do all the challenges before the server shutdown.
Read The Rules This challenge is pretty straight forward. Read the rules using the view-source utility and you will find a commented html line with the flag.</description></item><item><title>Bountease: a BugBounty recon script</title><link>https://www.hato0.xyz/posts/penetration_testing/bountease/</link><pubDate>Thu, 18 Aug 2022 00:00:00 +0000</pubDate><author>Hato0</author><guid>https://www.hato0.xyz/posts/penetration_testing/bountease/</guid><description><![CDATA[Summary As I love both side of cybersecurity and as my job is blue team oriented, I&rsquo;m doing the red-teaming side on my personal life.
In that context, you may understand that I don&rsquo;t have a lot of time to perform the enumeration and reconnaissance of the target.
Fortunately, this phase is highly automatable, and that&rsquo;s what this post is about. I&rsquo;ve developed a recon script for Bug Bounty hunters that fit my needs (actually, I&rsquo;ll be the principal user) named Bountease.]]></description></item><item><title>C2 detection using fingerprinting</title><link>https://www.hato0.xyz/posts/blue_team/c2detection/</link><pubDate>Sun, 31 Jul 2022 00:00:00 +0000</pubDate><author>Hato0</author><guid>https://www.hato0.xyz/posts/blue_team/c2detection/</guid><description>Summary Adversaries leverage their access to assets using initial access tool (custom or not). These tools are mainly used to get a remote session of the asset.
This remote access is known as Command and Control (C2) and can be implemented through many protocols and many technics. This channel will allow adversaries to perform lateral movement, internal discovery, exfiltration and much more.
Willing to hunt for C2 in companies and homemade networks, I&amp;rsquo;ve focused my effort into C2 over HTTP.</description></item></channel></rss>