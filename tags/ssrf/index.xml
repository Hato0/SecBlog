<rss xmlns:atom="http://www.w3.org/2005/Atom" version="2.0"><channel><title>ssrf - Tag - Hato0 - Blog</title><link>/tags/ssrf/</link><description>ssrf - Tag - Hato0 - Blog</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 04 Mar 2020 15:58:26 +0800</lastBuildDate><atom:link href="/tags/ssrf/" rel="self" type="application/rss+xml"/><item><title>SSRF attack</title><link>/posts/penetration-testing/ssrf/</link><pubDate>Wed, 04 Mar 2020 15:58:26 +0800</pubDate><author>Hato0</author><guid>/posts/penetration-testing/ssrf/</guid><description>Server-side request forgery In a Server-Side Request Forgery (SSRF) attack, the attacker can abuse functionality on the server to read or update internal resources.
The attacker can supply or modify a URL which the code running on the server will read or submit data to, and by carefully selecting the URLs, the attacker may be able to read server configuration such as AWS metadata, connect to internal services like http enabled databases or perform post requests towards internal services which are not intended to be exposed.</description></item></channel></rss>